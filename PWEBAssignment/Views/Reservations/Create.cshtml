@model PWEBAssignment.Models.Reservations

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Reservations</h4>
<hr />
<div class="d-flex flex-row justify-content-between">
	<div class="col-md-4">
		<form asp-action="Create">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="DeliveryDate" class="control-label"></label>
				<input asp-for="DeliveryDate" class="form-control" type="date" value="@DateTime.Today.ToString("yyyy-MM-dd")"/>
				<span asp-validation-for="DeliveryDate" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ReturnDate" class="control-label"></label>
				<input asp-for="ReturnDate" class="form-control" type="date" value="@DateTime.Today.ToString("yyyy-MM-dd")"/>
				<span asp-validation-for="ReturnDate" class="text-danger"></span>
			</div>

			<h5>Price: <span id="price">0</span> €</h5>
			<div class="form-group">
				<input type="submit" value="Create" class="btn btn-primary" asp-route-CompanyId="@Model.CompanyId" asp-route-CarId="@Model.CarId"/>
			</div>
		</form>
	</div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

	<script>
		var someValue = '@ViewBag.PriceHour';
		function calculateDays() {
			var startDate = new Date(document.getElementById("DeliveryDate").value);
			var endDate = new Date(document.getElementById("ReturnDate").value);
			var timeDiff = Math.abs(endDate.getTime() - startDate.getTime());
			var dayDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
			var totalPrice = dayDiff * someValue;
			document.getElementById("price").innerHTML = totalPrice;
		}

		document.getElementById("DeliveryDate").addEventListener("change", calculateDays);
		document.getElementById("ReturnDate").addEventListener("change", calculateDays);
	
	</script>
}
